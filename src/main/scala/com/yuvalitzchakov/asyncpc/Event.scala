package com.yuvalitzchakov.asyncpc

import io.circe.{Decoder, Encoder}

/**
  * Represents an event as generated by the data generator process
  * @param eventType Event type field
  * @param data Payload of the event
  * @param timestamp Timestamp of the generated event
  */
final case class Event(eventType: String, data: String, timestamp: Long)
object Event {
  implicit val eventDecoder: Decoder[Event] =
    Decoder.forProduct3("event_type", "data", "timestamp")(Event.apply)

  implicit val eventEncoder: Encoder[Event] =
    Encoder.forProduct3("event_type", "data", "timestamp")(event =>
      (event.eventType, event.data, event.timestamp))
}
